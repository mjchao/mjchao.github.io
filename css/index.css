@import url("general.css");
@import url("nav.css");

body {
  margin: 0;
}

header {
  text-align: center;
  position: relative;
  margin-top: 100px;
}

header img.hero-img {
  margin-right: 2em;
}

header div.hero {
  display: inline-block;
}

header div.hero h1 {
  text-align: center;
  font-family: 'Comfortaa', cursive;
  font-size: 5em;
  margin-top: .3em;
  margin-bottom: 0em;
}

header div.hero h2 {
  text-align: center;
  font-family: 'Raleway', sans-serif;
  font-size: 2.5em;
}

section.main {
  margin-top: 40px;
  margin-bottom: 30px;
  padding-bottom: 3em;
  width: 100%;
  background-color: #87ceeb;
  position: relative;
}

section.main .content {
  position: relative;
  padding: 0 1em 0 1em;
  text-align: center;
}

section.main .content p {
  text-align: left;
  max-width: 500px;
  margin: 30px auto 30px auto;
}

@media screen and (max-width: 834px) {
  section.main .content {
    padding-top: 2em;
  }

  section.main aside:not(:last-child) {
    padding-bottom: 2em;
    border-bottom: 1px solid black;
    border-left: 10px;
  }
}


@media screen and (min-width: 835px) {

  section.main aside {
    width: 33%;
    float: left;
    text-align: center;
    display: table-cell;
  }

  section.main .content {
    margin: 30px;
    height: 100%;
    position: relative;
    text-align: center;
  }

  section.main .content p {
    text-align: left;
  }

  section.main .content .btn {
    position: absolute;
    bottom: 0;
  }

  /* this is better than using table and table-cell displays to get same-height
  columns. But Safari does not support flex, so we have to make this check.*/
  @supports (display: flex) {
    section.main {
      display: flex;
    }

    section.main aside {
      flex: 1;
    }
  }

  @supports not(display: flex) {
    section.main {
      display: table;
    }

    section.main aside {
      display: table-cell;
    }
  }
}

